name: 'Apply S3 Terraform Configuration'

on:
  workflow_dispatch:  # Manual trigger to apply infrastructure

permissions:
  id-token: write
  contents: read

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout Current Repository
        uses: actions/checkout@v4

      - name: Clone External Terraform Repository
        run: |
          git clone https://github.com/DiomedesAuRaa/aws-terraform-stack.git

      - name: Verify Cloned Files
        run: ls -la aws-terraform-stack/s3
 
      - name: Create terraform.tfvars
        working-directory: aws-terraform-stack/s3
        run: |
          cat > terraform.tfvars <<EOF
          aws_access_key = "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws_secret_key = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          region         = "us-east-1"
          EOF
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}
          aws-region: us-east-1

      - name: Initialize Terraform
        working-directory: aws-terraform-stack/s3
        run: terraform init

      - name: Run Terraform Validate
        working-directory: aws-terraform-stack/s3
        run: |
          terraform validate
        continue-on-error: false         

      - name: Terraform Plan
        working-directory: aws-terraform-stack/s3
        run: terraform plan -out=tfplan

      - name: Show Terraform Plan Output (Debugging)
        if: failure()  # Only runs if the previous step fails
        run: |
          echo "Terraform plan failed, printing debug information..."
          terraform plan

      - name: Terraform Apply
        working-directory: aws-terraform-stack/s3
        run: terraform apply -lock=false tfplan 
        if: success()  

      - name: Terraform Test
        working-directory: aws-terraform-stack/s3
        run: terraform test
        if: success()

      # Discord Notifications
      - name: Notify Discord on Success
        if: success()
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{"content": "✅ **Terraform Apply Workflow Succeeded!**\n\nRepository: ${{ github.repository }}\nWorkflow: ${{ github.workflow }}\nRun ID: ${{ github.run_id }}\nView run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{"content": "❌ **Terraform Apply Workflow Failed!**\n\nRepository: ${{ github.repository }}\nWorkflow: ${{ github.workflow }}\nRun ID: ${{ github.run_id }}\nView run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}                